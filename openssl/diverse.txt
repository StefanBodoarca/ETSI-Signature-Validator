pkcs12 -export -out keystore_personal.p12 -inkey ca.key -in ca.crt


keytool -importcert -keystore $CATALINA_HOME/conf/keystore.p12 -trustcacerts -alias tomcat -keypass <keystore_password> -storepass <keystore_password> -file <certificatefilename> -storetype PKCS12 -providername JsafeJCE -keyalg RSA 

mvn install:install-file \
   -Dfile=/home/stefan/workspace/dss/dss-demonstrations/dss-mock-tsa/target/dss-mock-tsa-5.5.jar \
   -DgroupId=eu.europa.ec.joinup.sd-dss \
   -DartifactId=dss-mock-tsa \
   -Dversion=5.5 \
   -Dpackaging=jar \
   -DgeneratePom=true


keytool -importcert -keystore keystore.p12 -trustcacerts -alias tomcat -keypass dss-password -storepass dss-password -file /home/stefan/workspace/disertatie/openssl/ca/ca.crt -storetype PKCS12 -providername JsafeJCE -keyalg RSA 


keytool -delete -noprompt -alias ${cert.alias}  -keystore ${keystore.file} 
-storepass ${keystore.pass}

openssl crl -inform DER -text -noout -in mycrl.crl

Most CRLs are DER encoded, but you can use -inform PEM if your CRL is not binary. If you’re unsure if it is DER or PEM open it with a text editor. If you see —–BEGIN X509 CRL—– then it’s PEM and if you see strange binary-looking garbage characters it’s DER.


#######################################
openssl genrsa -aes128 -out server.key 1024
openssl req -new -key server.key -out server.csr -config openssl.cnf
openssl ca -in server.csr -out server.crt -cert ca.crt -keyfile ca.key -config openssl.cnf

####################OCSP###############################################

Creating the OCSP server

    In order to host an OCSP server, an OCSP signing certificate has to be generated. Run following 2 commands.

    openssl req -new -nodes -out ocspSigning.csr -keyout ocspSigning.key
    openssl ca -keyfile rootCA.key -cert rootCA.crt -in ocspSigning.csr -out ocspSigning.crt -config validation.conf

2. Start OCSP Server. Switch to a new terminal and run,

openssl ocsp -index demoCA/index.txt -port 8080 -rsigner ocspSigning.crt -rkey ocspSigning.key -CA rootCA.crt -text -out log.txt &

3. Verify Certificate Revocation. Switch to a new terminal and run

openssl ocsp -CAfile rootCA.crt -issuer rootCA.crt -cert certificate.crt -url http://127.0.0.1:8080 -resp_text -noverify


##################################REVOKE##################################
openssl ca -revoke ./certs/x.crt -config rootca.conf
openssl ca -gencrl -config rootca.conf -out ./crl/crllist.crl
openssl crl -inform PEM -in ./crl/crllist.crl -outform DER -out ./crl/crllist_der.crl




