
[default]
name                    = root-ca
domain_suffix           = example.com
aia_url                 = http://localhost:8080/diverse/rootca2/root-ca.crt
crl_url                 = http://localhost:8080/diverse/rootca2/crl/crllist_der.crl
ocsp_url                = http://127.0.0.1:9999
name_opt                = utf8,esc_ctrl,multiline,lname,align

HOME		= .
dir		= .			# Where everything is kept
RANDFILE	= $dir/private/random	# private random number file
oid_section		= new_oids

[ new_oids ]

# Policies used by the TSA examples.
tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ ca ]
default_ca	= CA_default		# The default ca section

####################################################################
[ CA_default ]

dir		= .			# Where everything is kept
certs		= $dir/certs		# Where the issued certs are kept
crl_dir		= $dir/crl		# Where the issued crl are kept
database	= $dir/db/index		# database index file.
new_certs_dir	= $dir/newcerts		# default place for new certs.

certificate	= $dir/root-ca.crt 	# The CA certificate
serial		= $dir/db/serial 		# The current serial number
crlnumber	= $dir/db/crlnumber	# the current crl number
					# must be commented out to leave a V1 CRL
crl		= $dir/crl/crllist_der.crl 		
private_key	= $dir/private/root-ca.key    
RANDFILE	= $dir/private/random	# private random number file

x509_extensions	= usr_cert		# The extensions to add to the cert
name_opt 	= ca_default		# Subject Name options
cert_opt 	= ca_default		# Certificate field options

default_days	= 365			# how long to certify for
default_crl_days= 365			# how long before next CRL
default_md	= default		# use public key default MD
preserve	= no			# keep passed DN ordering

policy		= policy_match

# For the CA policy
[ policy_match ]
countryName		= match
stateOrProvinceName	= match
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

[ policy_anything ]
countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= optional
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

####################################################################
[ req ]
#default_bits		= 2048
#default_keyfile 	= privkey.pem
distinguished_name	= req_distinguished_name
#attributes		= req_attributes
#x509_extensions	= v3_ca	# The extensions to add to the self signed cert
x509_extensions	= ca_ext	# The extensions to add to the self signed cert

string_mask = utf8only

# req_extensions = v3_req # The extensions to add to a certificate request

[ req_distinguished_name ]
countryName			= Country Name (2 letter code)
countryName_default		= AU
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= Some-State

localityName			= Locality Name (eg, city)

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= Internet Widgits Pty Ltd

# we can do this but it is not needed normally :-)
#1.organizationName		= Second Organization Name (eg, company)
#1.organizationName_default	= World Wide Web Pty Ltd

organizationalUnitName		= Organizational Unit Name (eg, section)
#organizationalUnitName_default	=

commonName			= Common Name (e.g. server FQDN or YOUR name)
commonName_max			= 64

emailAddress			= Email Address
emailAddress_max		= 64

# SET-ex3			= SET extension number 3

[ req_attributes ]
challengePassword		= A challenge password
challengePassword_min		= 4
challengePassword_max		= 20

unstructuredName		= An optional company name

[ usr_cert ]
basicConstraints=CA:FALSE
nsComment			= "OpenSSL Generated Certificate"
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info
keyUsage                = digitalSignature, nonRepudiation, keyEncipherment
extendedKeyUsage        = clientAuth,serverAuth
subjectKeyIdentifier    = hash


[crl_info]
URI.0                   = $crl_url

[issuer_info]
caIssuers;URI.0         = $aia_url
OCSP;URI.0              = $ocsp_url

[ v3_req ]

# Extensions to add to a certificate request

basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]


[ crl_ext ]

authorityKeyIdentifier=keyid:always

[ proxy_cert_ext ]


basicConstraints=CA:FALSE


nsComment			= "OpenSSL Generated Certificate"

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

# This really needs to be in place for it to be a proxy certificate.
proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

####################################################################
[ tsa ]

default_tsa = tsa_config1	# the default TSA section

[ tsa_config1 ]

# These are used by the TSA reply generation only.
#dir		= ./demoCA		# TSA root directory
dir		= .		# TSA root directory
serial		= $dir/tsa_serial	# The current serial number (mandatory)
crypto_device	= builtin		# OpenSSL engine to use for signing
#signer_cert	= $dir/tsacert.pem 	# The TSA signing certificate
					# (optional)
 signer_cert	= $dir/tsa.crt 	# The TSA signing certificate
#certs		= $dir/cacert.pem	# Certificate chain to include in reply
					# (optional)
 certs		= $dir/tsa_chain.pem	# Certificate chain to include in reply
#signer_key	= $dir/private/tsakey.pem # The TSA private key (optional)
 signer_key	= $dir/tsa.key # The TSA private key (optional)
signer_digest  = sha256			# Signing digest to use. (Optional)
default_policy	= tsa_policy1		# Policy if request did not specify it
					# (optional)
#other_policies	= tsa_policy2, tsa_policy3	# acceptable policies (optional)
digests     = sha1, sha256, sha384, sha512  # Acceptable message digests (mandatory)
accuracy	= secs:1, millisecs:500, microsecs:100	# (optional)
clock_precision_digits  = 0	# number of digits after dot. (optional)
ordering		= yes	# Is ordering defined for timestamps?
				# (optional, default: no)
tsa_name		= yes	# Must the TSA name be included in the reply?
				# (optional, default: no)
ess_cert_id_chain	= no	# Must the ESS cert id chain be included?
				# (optional, default: no)
#ess_cert_id_alg		= sha1	# algorithm to compute certificate
				# identifier (optional, default: sha1)
ess_cert_id_alg		= sha256	# algorithm to compute certificate


#############DEFINE_EXTENSIONS

				
#####TSA

[ tsa_ext ]

authorityKeyIdentifier  = keyid:always
basicConstraints        = critical,CA:false
extendedKeyUsage        = critical,timeStamping
keyUsage                = critical,nonRepudiation
subjectKeyIdentifier    = hash



######CA

[ ca_ext ]

basicConstraints        = critical,CA:true
keyUsage                = critical, keyCertSign, cRLSign
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info

#######OCSP

[ v3_OCSP ]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = OCSPSigning
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info

